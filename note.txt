>>> TCP
    sender:
        应用层（用户）向 ByteStream 写入数据。
        之后在调用 TCP 的 sender 服务时会将已经写入的数据封装成 IP 报文并发送出去。
    receiver:
        接收端的 recever 服务会自动接受数据并按顺序放入 ByteStream 中，用户只需要不断从中读取即可获得应用层数据。
        接收端在收到数据之后，使用 reassembler 对数据进行重排，再插入进 ByteStream 的尾部。

>>> ARP
    在 ARP（地址解析协议）的规则中，广播的作用是询问局域网中的所有设备，是否有某台设备拥有特定的 IP 地址。
    ARP 广播的基本规则
    发送方的行为：
        以太网帧：
            MAC: 使用广播 MAC 地址 ff:ff:ff:ff:ff:ff，表示发送给网络中的所有设备。
            type: 使用 ARP 作为 data
        ARP 报文：
            请求方的 MAC 地址和 IP 地址。
            请求目标的 MAC 地址和 IP 地址。（目标 MAC 地址通常为空或 00:00:00:00:00:00）。
    接收方的行为：
        所有设备都需要接收广播帧并更新自己的 ip 缓存。
        是否回复：
            如果 ARP 报文请求的 IP 地址与设备的本地 IP 地址匹配，则需要生成并发送一个 ARP 回复帧。
            如果不匹配，则设备忽略请求

>>> IP
    路由器的逻辑编写
    路由器有多个端口，每个端口对应一个子网并有一个子网内的 ip
    首先往路由器手动添加 ip 映射（即收到目标是 dst_ip 的数据链路层报文时会转发给哪个端口，同时也要保存这个报文是否
        是直接发给当前路由器所在的众多子网中的其中一个）
    之后，每次调用 route 方法就会将堆积到路由器的数据链路层报文使用之前注册的映射进行转发（遵循最长匹配原则，用字典树实现）
    这里没有实现动态路由（之后可能会实现一下）



